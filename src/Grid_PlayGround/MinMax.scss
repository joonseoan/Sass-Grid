// .container {
//   margin: 30px auto;
//   background-color: #dddddd;

//   width: 1000px;
//   height: 1000px;

//   display: grid;

//   // // [ Using min-content and max-content ]
//   // grid-template-rows: repeat(2, 150px);

//   // // even though it is min-content, if the long height content
//   // // is vailable, it just fits into the logest one.

//   // // grid-template-rows: repeat(2, min-content);
//   // grid-template-rows: 150px min-content;

//   // // Evenly Same
//   // grid-template-columns: 1fr 1fr 1fr 1fr;

//   // // min-content : the cell size getting fit with the smaller width content
//   // // This colum has two row so that Max contents fit into the longer contents "Modern"

//   // // min-content : the cell size getting fitted with the smaller width content
//   // grid-template-columns: max-content 1fr 1fr min-content;

//   // [ Using minmax ]
//   // it is same as above 150px and min-content
//   // At least 150px or otherwise min-content
//   // grid-template-rows: repeat(2, minmax(150px, min-content));

//   // [ IMPORTANT !!!!!! ]
//   // // min 200px and max 300px for the first column
//   // // In this case, when the contents are over 300px, it does not shown up

//   // // Default value is 300px when browser has an enough space.
//   // // Also, even when it has less than 200px, it does not shrink.
//   // grid-template-columns: minmax(200px, 300px) repeat(3, 1fr);

//   // [ IMPORTANT ]
//   // // in order to prevent overflow
//   // // The default value is 50% and when the space is not enought it starts shrink up to 200px
//   // grid-template-columns: minmax(200px, 50%) repeat(3, 1fr);

//   // // in order to prevent overflow
//   // // The default value is 1fr and when the space is not enought it starts shrink up to 200px    
//   // grid-template-columns: minmax(200px, 1fr) repeat(3, 1fr);

//   // [ Using Auto fill and auto fit ]
//   grid-template-rows: repeat(2, minmax(150px, min-content));

//   // grid-template-columns: repeat(4, 1fr);

//   // It creates 10 colums because "width: 1000px"
//   // Now we have only 8 colums so that the rest 2 columns are empty.
//   grid-template-columns: repeat(auto-fill, 100px);

//   // It still creates 10 columns with each 100px width
//   // However, The rest 2 colums are shrink or hidden 
//   //  that makes 200px is empty 
//   grid-template-columns: repeat(auto-fit, 100px);

//   // fills out the entire space but....still the rest 2 colums overriden.
//   grid-template-columns: repeat(auto-fit, 1fr);

//   // with larger width
//   width: 90%;

//   // the default is 1fr.
//   // When the parent does not have the enough space for "100px"
//   grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
//   grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
//   // grid-auto-rows: 150px; 

//   .item {

//     padding: 10px;
//     color: white;
//     font-family: sans-serif;
//     font-size: 30px;
//     background-color: orangered;

//     &--1 {
//       background-color: orangered;
//     }

//     &--2 {
//       background-color: yellowgreen;
//     }

//     &--3 {
//       background-color: blueviolet;
//     }

//     &--4 {
//       background-color: palevioletred;
//     }

//     &--5 {
//       background-color: royalblue;
//     }

//     &--6 {
//       background-color: goldenrod;
//     }

//     &--7 {
//       background-color: crimson;
//     }

//     &--8 {
//       background-color: darkslategray;
//     }

//   }
// }